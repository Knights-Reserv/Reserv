[{"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\index.js":"1","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\App.js":"2","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\CardPage.js":"4","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\LoginPage.js":"5","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\PageTitle.js":"6","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\CardUI.js":"7","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\Login.js":"8","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\CreateAccount.js":"9","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\LoggedInName.js":"10","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\LandingPage.js":"11"},{"size":831,"mtime":1697061191055,"results":"12","hashOfConfig":"13"},{"size":556,"mtime":1697141256218,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1697060071423,"results":"15","hashOfConfig":"13"},{"size":467,"mtime":1697060071423,"results":"16","hashOfConfig":"13"},{"size":1032,"mtime":1697140487305,"results":"17","hashOfConfig":"13"},{"size":157,"mtime":1697060071421,"results":"18","hashOfConfig":"13"},{"size":3108,"mtime":1697060071420,"results":"19","hashOfConfig":"13"},{"size":1947,"mtime":1697063013649,"results":"20","hashOfConfig":"13"},{"size":2435,"mtime":1697061742987,"results":"21","hashOfConfig":"13"},{"size":705,"mtime":1697083147312,"results":"22","hashOfConfig":"13"},{"size":293,"mtime":1697141296452,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"he38x6",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\index.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\App.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\CardPage.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\LoginPage.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\PageTitle.js",[],[],"C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\CardUI.js",["61","62"],[],"import React, { useState } from 'react';\r\n\r\nfunction CardUI()\r\n{\r\n    var card = '';\r\n    var search = '';\r\n\r\n    const [message,setMessage] = useState('');\r\n    const [searchResults,setResults] = useState('');\r\n    const [cardList,setCardList] = useState('');\r\n\r\n    var _ud = localStorage.getItem('user_data');\r\n    var ud = JSON.parse(_ud);\r\n    var userId = ud.id;\r\n    var firstName = ud.firstName;\r\n    var lastName = ud.lastName;\r\n    const addCard = async event =>\r\n    {\r\n        event.preventDefault();\r\n        var obj = {userId:userId,card:card.value};\r\n        var js = JSON.stringify(obj);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/addcard',\r\n            {method:'POST',body:js,headers:{'Content-Type':\r\n            'application/json'}});\r\n            var txt = await response.text();\r\n            var res = JSON.parse(txt);\r\n            if( res.error.length > 0 )\r\n            {\r\n                setMessage( \"API Error:\" + res.error );\r\n            }\r\n            else\r\n            {\r\n                setMessage('Card has been added');\r\n            }\r\n        }\r\n        catch(e)\r\n        {\r\n            setMessage(e.toString());\r\n        }\r\n        card.value = \"\";\r\n    };\r\n\r\n    const searchCard = async event =>\r\n    {\r\n        event.preventDefault();\r\n        var obj = {userId:userId,search:search.value};\r\n        var js = JSON.stringify(obj);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/searchcards',\r\n            {method:'POST',body:js,headers:{'Content-Type':\r\n            'application/json'}});\r\n            var txt = await response.text();\r\n            var res = JSON.parse(txt);\r\n            var _results = res.results;\r\n            var resultText = '';\r\n            for( var i=0; i<_results.length; i++ )\r\n            {\r\n                resultText += _results[i];\r\n                if( i < _results.length - 1 )\r\n                {\r\n                    resultText += ', ';\r\n                }\r\n            }\r\n            setResults('Card(s) have been retrieved');\r\n            setCardList(resultText);\r\n        }\r\n        catch(e)\r\n        {\r\n            alert(e.toString());\r\n            setResults(e.toString());\r\n        }\r\n        search.value = \"\";\r\n    };\r\n\r\n    return(\r\n        <div id=\"cardUIDiv\">\r\n            <br />\r\n            <input type=\"text\" id=\"searchText\" class=\"textForm\" placeholder=\"Card To Search For\"\r\n            ref={(c) => search = c} />\r\n            <button type=\"button\" id=\"searchCardButton\" class=\"buttons\"\r\n            onClick={searchCard}> Search Card</button><br />\r\n            <span id=\"cardSearchResult\">{searchResults}</span>\r\n            <p id=\"cardList\">{cardList}</p><br /><br />\r\n            <input type=\"text\" class=\"textForm\" id=\"cardText\" placeholder=\"Card To Add\"\r\n            ref={(c) => card = c} />\r\n            <button type=\"button\" id=\"addCardButton\" class=\"buttons\"\r\n            onClick={addCard}> Add Card </button><br />\r\n            <span id=\"cardAddResult\">{message}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardUI;","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\Login.js",["63"],[],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login()\r\n{\r\n    var loginName;\r\n    var loginPassword;\r\n    const [message,setMessage] = useState('');\r\n    \r\n\r\n    const doLogin = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        var obj = {login:loginName.value,password:loginPassword.value};\r\n        var js = JSON.stringify(obj);\r\n        console.log(js);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/login',\r\n            {method:'POST',\r\n            body:js,\r\n            headers:{'Content-Type':'application/json'}});\r\n\r\n            var res = JSON.parse(await response.text());\r\n            if( res.id <= 0 )\r\n            {\r\n                setMessage('User/Password combination incorrect');\r\n            }\r\n            else\r\n            {\r\n                var user =\r\n                {firstName:res.firstName,lastName:res.lastName,id:res.id};\r\n                alert(res.id);        \r\n                localStorage.setItem('user_data', JSON.stringify(user));\r\n                alert(localStorage.id);\r\n                setMessage('');\r\n                window.location.href = '/cards';\r\n            }\r\n        }\r\n        catch(e)\r\n        {\r\n            alert(e.toString());\r\n            return;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div id=\"loginDiv\">\r\n        <form onSubmit={doLogin}>\r\n        <span id=\"inner-title\">Please Log In</span><br />\r\n        <input type=\"text\" class=\"textForm\" id=\"loginName\" placeholder=\"Username\"ref={(c) => loginName = c} required/><br />\r\n        <input type=\"password\" class=\"textForm\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c} required /><br />\r\n        <input type=\"submit\" id=\"loginButton\" class=\"buttons\" value = \"Login\" onClick={doLogin} />\r\n        </form>\r\n        <span id=\"loginResult\">{message}</span>\r\n        </div>\r\n    );\r\n};\r\nexport default Login;","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\CreateAccount.js",["64"],[],"import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction CreateAccount()\r\n{\r\n    var createAccountName;\r\n    var createAccountPassword;\r\n    var createAccountFirstName;\r\n    var createAccountLastName;\r\n    const [message,setMessage] = useState('');\r\n\r\n    const doCreateAccount = async event =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        var obj = {userName:createAccountName.value,password:createAccountPassword.value,firstName:createAccountFirstName.value, lastName:createAccountLastName.value};\r\n        var js = JSON.stringify(obj);\r\n        console.log(js);\r\n        try\r\n        {\r\n            const response = await fetch('http://localhost:5000/api/createAccount',\r\n            {method:'POST',\r\n            body:js,\r\n            headers:{'Content-Type':'application/json'}});\r\n\r\n            var txt = await response.text();\r\n            var res = JSON.parse(txt);\r\n            if( res.error.length > 0 )\r\n            {\r\n                setMessage( \"API Error:\" + res.error );\r\n            }\r\n            else\r\n            {\r\n                setMessage('Account Created');\r\n            }\r\n        }\r\n        catch(e)\r\n        {\r\n            alert(e.toString());\r\n            return;\r\n        }\r\n        createAccountName.value=\"\";\r\n        createAccountPassword.value=\"\";\r\n        createAccountFirstName.value=\"\";\r\n        createAccountLastName.value=\"\";\r\n    };\r\n    return(\r\n        <div id=\"loginDiv\">\r\n            <form onSubmit={doCreateAccount}>\r\n                <span id=\"inner-title\">Create an account</span><br />\r\n                <input type=\"text\" class=\"textForm\" id=\"createAccountName\" placeholder=\"Username\"ref={(c) => createAccountName = c} /><br />\r\n                <input type=\"password\" class=\"textForm\" id=\"createAccountPassword\" placeholder=\"Password\" ref={(c) => createAccountPassword = c} /><br />\r\n                <input type=\"text\" class=\"textForm\" id=\"createAccountFirstName\" placeholder=\"First Name\" ref={(c) => createAccountFirstName = c} /><br />\r\n                <input type=\"text\" class=\"textForm\" id=\"createAccountLastName\" placeholder=\"Last Name\" ref={(c) => createAccountLastName = c} /><br />\r\n                <input type=\"submit\" id=\"loginButton\" class=\"buttons\" value=\"Create Account\" onClick={doCreateAccount} />\r\n            </form>\r\n            <span id=\"loginResult\">{message}</span>\r\n        </div>\r\n    );\r\n};\r\nexport default CreateAccount;","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\components\\LoggedInName.js",["65"],[],"import React from 'react';\r\n\r\nfunction LoggedInName()\r\n{\r\n    var _ud = localStorage.getItem('user_data');\r\n    var ud = JSON.parse(_ud);\r\n\r\n    var userId = ud.id;\r\n    var firstName = ud.firstName;\r\n    var lastName = ud.lastName;\r\n\r\n    const doLogout = event =>\r\n    {\r\n        event.preventDefault();\r\n        localStorage.removeItem(\"user_data\")\r\n        window.location.href = '/';\r\n    };\r\n\r\n    return(\r\n        <div id=\"loggedInDiv\">\r\n            <span id=\"userName\">Logged In As {firstName} {lastName}</span><br />\r\n            <button type=\"button\" id=\"logoutButton\" class=\"buttons\"\r\n            onClick={doLogout}> Log Out </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoggedInName;","C:\\Users\\benja\\Documents\\GitHub\\Reserv\\frontend\\src\\pages\\LandingPage.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":15,"column":9,"nodeType":"68","messageId":"69","endLine":15,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":16,"column":9,"nodeType":"68","messageId":"69","endLine":16,"endColumn":17},{"ruleId":"66","severity":1,"message":"71","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"72","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":8,"column":9,"nodeType":"68","messageId":"69","endLine":8,"endColumn":15},"no-unused-vars","'firstName' is assigned a value but never used.","Identifier","unusedVar","'lastName' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'userId' is assigned a value but never used."]